name: Auto Bump Version
'on':
  pull_request:
    branches:
      - main
      - develop
      - test_bump_version_script
    types:
      - opened
      - synchronize
      - labeled
permissions:
  contents: write
  pull-requests: write
jobs:
  pr-helper:
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    steps:
      - name: Comment instructions for merging
        uses: actions/github-script@v7
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          script: "const message = `\n\U0001F44B Hi @${{ github.event.pull_request.user.login }}!\n\n  To finalize this PR, please add the \\`ready-to-merge\\` label.\n\n  This will trigger an automatic version bump and merge the PR \U0001F680.`;\n\ngithub.rest.issues.createComment({\n  issue_number: context.issue.number,\n  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: message\n});\n"
      - name: Remove 'ready-to-merge' label
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          labels: ready-to-merge
  version-bump:
    if: github.event.label.name == 'ready-to-merge'
    runs-on: ubuntu-latest
    steps:
      - name: Wait for all required status checks to pass
        uses: actions/github-script@v7
        id: check
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            const runId = context.runId;

            const delay = ms => new Promise(res => setTimeout(res, ms));
            const timeoutMinutes = 10;
            const start = Date.now();
            const timeout = timeoutMinutes * 60 * 1000;

            console.log(`Checking workflows triggered by PR #${prNumber}`);

            while (true) {
              const { data: runs } = await github.rest.actions.listWorkflowRunsForRepo({
                owner,
                repo,
                event: "pull_request",
                per_page: 100,
              });

              const filtered = runs.workflow_runs.filter(run =>
                run.pull_requests.some(pr => pr.number === prNumber)
                && run.id !== runId // don't wait on self
              );

              const statuses = filtered.map(r => ({ name: r.name, status: r.status, conclusion: r.conclusion }));

              console.log("Statuses:", statuses);

              const allCompleted = filtered.every(r => r.status === "completed");
              const allSuccessful = filtered.every(r => r.conclusion === "success");

              if (allCompleted && allSuccessful) {
                console.log("✅ All workflows completed successfully.");
                return;
              }

              if (Date.now() - start > timeout) {
                throw new Error(`❌ Timeout: Not all workflows completed within ${timeoutMinutes} minutes.`);
              }

              console.log("⏳ Waiting 10s...");
              await delay(10000);
            }
      - name: Checkout source branch
        uses: actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.head.ref }}'
          token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Use Node.js version from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - name: Run bump-version script
        run: |
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          HEAD_BRANCH="${{ github.event.pull_request.head.ref }}"

          echo "Base: $BASE_BRANCH"
          echo "Head: $HEAD_BRANCH"

          if [[ "$BASE_BRANCH" == "main" ]]; then
            if [[ "$HEAD_BRANCH" == hotfix-* ]]; then
              npm run bump-version hotfix
            elif [[ "$HEAD_BRANCH" == release-candidate-* ]]; then
              npm run bump-version rc
            else
              echo "Unknown source branch type: $HEAD_BRANCH"
            fi
          elif [[ "$BASE_BRANCH" == "develop" ]]; then
              npm run bump-version feature
          elif [[ "$BASE_BRANCH" == "test_bump_version_script" ]]; then
              npm run bump-version feature
          else
            echo "Base branch is not main/develop — skipping version bump"
          fi
      - name: Remove 'ready-to-merge' label
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          labels: ready-to-merge
      - name: Merge the pull request
        uses: actions/github-script@v7
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const mergeable = pr.data.mergeable;
            const mergeable_state = pr.data.mergeable_state;

            if (mergeable && mergeable_state === "clean") {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                merge_method: "merge", // safest GitHub default
                commit_title: pr.data.title,
                commit_message: pr.data.body || "", // optional, follows GitHub UI behavior
                sha: pr.data.head.sha
              });
            } else {
              core.setFailed(`PR is not in a mergeable state: ${mergeable_state}`);
            }
